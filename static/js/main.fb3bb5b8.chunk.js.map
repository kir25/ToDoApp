{"version":3,"sources":["components/components/todo-input/todo-input.js","components/components/todo-item/todo-item.js","components/components/todo-list/todo-list.js","components/components/footer/footer.js","components/container/todo.js","components/actions/actionCreator.js","components/constants.js","components/components/title/title.js","components/App.js","components/registerServiceWorker.js","components/reducers/tasks.js","components/store.js","components/reducers/filters.js","components/reducers/index.js","index.js"],"names":["ToDoInput","_ref","value","onChange","onKeyPress","react_default","a","createElement","className","placeholder","defaultProps","ToDoItem","text","isCompleted","removeTask","id","completeTask","onClick","ToDoList","tasksList","map","_ref2","todo_item_todo_item","key","FILTERS_BTN","Footer","amount","activeFilter","changeFilter","concat","ToDo","state","taskText","handleInputChange","target","_this","setState","addTask","length","props","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","this","_this$props","filters","isTasksExist","taskCounter","todo_input_todo_input","todo_list_todo_list","footer_footer","Component","connect","_ref3","type","Title","title","App","react","components_title_title","container_todo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","TASKS","load","namespace","preloadedState","arguments","undefined","Object","toConsumableArray","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kXAKMA,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAASC,EAAnBH,EAAmBG,WAAnB,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,aACVC,YAAY,oBACZN,SAAUA,EACVD,MAAOA,EACPE,WAAYA,OAYlBJ,EAAUU,aAAe,CACvBP,SAAU,aACVC,WAAW,aACXF,MAAO,IAGMF,QC1BTW,SAAW,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,KAAMC,EAATZ,EAASY,YAAYC,EAArBb,EAAqBa,WAAWC,EAAhCd,EAAgCc,GAAGC,EAAnCf,EAAmCe,aAAnC,OACfX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,KAAGU,QAAS,kBAAID,EAAaD,IAAKP,UAAWK,EAAc,2BAA6B,uBACxFR,EAAAC,EAAAC,cAAA,QAAMC,UAAWK,EAAc,iBAAmB,QAASD,GAC3DP,EAAAC,EAAAC,cAAA,KAAGU,QAAS,kBAAIH,EAAWC,IAAKP,UAAU,oBAU9CG,EAASD,aAAe,CACtBE,KAAM,GACNC,aAAa,EACbE,GAAG,GAGUJ,QCnBTO,SAAW,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,UAAUL,EAAbb,EAAaa,WAAWE,EAAxBf,EAAwBe,aAAxB,OACfX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXW,EAAUC,IAAI,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,GAAIH,EAAPS,EAAOT,KAAMC,EAAbQ,EAAaR,YAAb,OACbR,EAAAC,EAAAC,cAACe,EAAD,CAAUN,aAAcA,EAAcF,WAAYA,EAAYC,GAAIA,EAAIQ,IAAKR,EAAIH,KAAMA,EAAMC,YAAaA,SAW9GK,EAASR,aAAe,CACtBS,UAAW,GACXL,WAAW,aACXE,aAAa,cAGAE,QCrBTM,SAAc,CAClB,CACEZ,KAAM,MACNG,GAAI,OAEN,CACEH,KAAM,SACNG,GAAI,UAEN,CACEH,KAAM,YACNG,GAAI,eAIFU,EAAS,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,OAAQC,EAAX1B,EAAW0B,aAAcC,EAAzB3B,EAAyB2B,aAAzB,OACbvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,GAAAqB,OAA6BH,EAA7B,gBACArB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,EAAYJ,IAAI,SAAAC,GAAA,IAAGT,EAAHS,EAAGT,KAAMG,EAATM,EAASN,GAAT,OACfV,EAAAC,EAAAC,cAAA,UACEU,QAAS,WAAQW,EAAab,IAC9BQ,IAAKR,EACLP,UAAWO,IAAOY,EAAe,oBAAsB,cACtDf,QAaXa,EAAOf,aAAe,CACpBkB,aAAc,aACdF,OAAQ,EACRC,aAAc,OAGDF,QCnCTK,oNACJC,MAAQ,CACNC,SAAU,MAGZC,kBAAoB,SAAAhC,GAA2B,IAAdC,EAAcD,EAAxBiC,OAAUhC,MAC/BiC,EAAKC,SAAS,CACZJ,SAAU9B,OAIdmC,QAAU,SAAAhB,GAAa,IAAVE,EAAUF,EAAVE,IACHS,EAAaG,EAAKJ,MAAlBC,SACJA,EAASM,OAAS,GAAa,UAARf,KAEzBc,EADoBF,EAAKI,MAAjBF,UACC,IAAIG,MAAQC,UAAWT,GAAU,GAC1CG,EAAKC,SAAS,CACZJ,SAAU,SAKhBU,YAAc,SAACC,EAAOhB,GACpB,OAAQA,GACN,IAAK,YACH,OAAOgB,EAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKhC,cACnC,IAAK,SACH,OAAO8B,EAAMC,OAAO,SAAAC,GAAI,OAAKA,EAAKhC,cACpC,QACE,OAAO8B,MAIbG,sBAAwB,SAAAH,GAAK,OAAIA,EAAMC,OAAO,SAAAC,GAAI,OAAKA,EAAKhC,cAAayB,gFAEhE,IACCN,EAAae,KAAKhB,MAAlBC,SADDgB,EAE4DD,KAAKR,MAAhEI,EAFDK,EAECL,MAAO7B,EAFRkC,EAEQlC,WAAYE,EAFpBgC,EAEoBhC,aAAciC,EAFlCD,EAEkCC,QAASrB,EAF3CoB,EAE2CpB,aAC5CsB,EAAeP,GAASA,EAAML,OAAS,EACvCI,EAAcK,KAAKL,YAAYC,EAAOM,GACtCE,EAAcJ,KAAKD,sBAAsBH,GAE/C,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC6C,EAAD,CAAWhD,WAAY2C,KAAKV,QAASlC,SAAU4C,KAAKd,kBAAmB/B,MAAO8B,IAC7EkB,GAAgB7C,EAAAC,EAAAC,cAAC8C,EAAD,CAAUlC,UAAWuB,EAAa5B,WAAYA,EAAYE,aAAcA,IACxFkC,GAAgB7C,EAAAC,EAAAC,cAAC+C,EAAD,CAAQ1B,aAAcA,EAAcF,OAAQyB,EAAaxB,aAAcsB,YA9C7EM,cAoDJC,cAAQ,SAAAC,GAAA,MAAyB,CAC9Cd,MADqBc,EAAGd,MAExBM,QAFqBQ,EAAUR,UAG7B,CAAEZ,QClEgB,SAACtB,EAAGH,EAAKC,GAAT,MAAwB,CAC1C6C,KCHoB,WDIpB3C,KACAH,OACAC,gBD8DWC,WC3DS,SAAAC,GAAE,MAAG,CACzB2C,KCTqB,cDUrB3C,ODyDuBC,aCvDD,SAAAD,GAAE,MAAG,CAC3B2C,KCZuB,gBDavB3C,ODqDqCa,aClDf,SAAAD,GAAY,MAAG,CACrC+B,KChBuB,gBDiBvB/B,kBD6CW6B,CAG0C1B,GG/DnD6B,SAAQ,SAAA1D,GAAA,IAAG2D,EAAH3D,EAAG2D,MAAH,OACZvD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASoD,KAOzBD,EAAMjD,aAAe,CACnBkD,MAAO,gBAGMD,QCJAE,EAPL,kBACNxD,EAAAC,EAAAC,cAACuD,EAAA,SAAD,KACIzD,EAAAC,EAAAC,cAACwD,EAAD,CAAOH,MAAM,aACbvD,EAAAC,EAAAC,cAACyD,EAAD,QCCFC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhD,QACf0C,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,8BC5E7DC,EAAMC,eAAK,CAACC,UAAU,cAEtBF,GAAQA,EAAM5C,OAAQ4C,EAAM5C,MAAML,SACpCiD,EAAM,CACJ5C,MAAM,KAIV,ICCuB+C,EDuBR/C,EAxBD,WAA0D,IAAzDZ,EAAyD4D,UAAArD,OAAA,QAAAsD,IAAAD,UAAA,GAAAA,UAAA,GAAjDJ,EAAM5C,MAA2C1C,EAAA0F,UAAArD,OAAA,EAAAqD,UAAA,QAAAC,EAAlC7E,EAAkCd,EAAlCc,GAAIH,EAA8BX,EAA9BW,KAAMC,EAAwBZ,EAAxBY,YAC9C,OADsEZ,EAAXyD,MAEzD,IJboB,WIclB,SAAA7B,OAAAgE,OAAAC,EAAA,EAAAD,CACK9D,GADL,CACY,CACRhB,KACAH,OACAC,iBAGN,IJpBqB,cIqBnB,OAAOgF,OAAAC,EAAA,EAAAD,CAAI9D,GAAOa,OAAO,SAAAC,GAAI,OAAIA,EAAK9B,KAAOA,IAC/C,IJrBuB,gBIsBrB,OAAO8E,OAAAC,EAAA,EAAAD,CAAI9D,GAAOX,IAAI,SAAAyB,GAIpB,OAHIA,EAAK9B,KAAOA,IACd8B,EAAKhC,aAAegC,EAAKhC,aAEpBgC,IAEX,QACE,OAAOd,IEpBEa,EARA,WAAiD,IAAhDb,EAAgD4D,UAAArD,OAAA,QAAAsD,IAAAD,UAAA,GAAAA,UAAA,GAD5C,MAC4C1F,EAAA0F,UAAArD,OAAA,EAAAqD,UAAA,QAAAC,EAAzBlC,EAAyBzD,EAAzByD,KAAM/B,EAAmB1B,EAAnB0B,aACzC,OAAQ+B,GACJ,INFmB,gBMGf,OAAO/B,EACX,QACI,OAAOI,ICFJgE,EAFKC,YAAgB,CAACrD,QAAMM,YFCrCgD,EAIoDC,IAe3CC,GAZQT,EAUM,GATzBU,YACIL,EACAL,EACAO,EACII,YAAgBC,eAAK,CAAEb,UAAW,oCGF9Cc,IAASC,OACLnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAUN,MAAOA,GACb9F,EAAAC,EAAAC,cAACmG,EAAD,OAELC,SAASC,eAAe,SLCZ,WACb,GAA6C,kBAAmBnC,UAAW,CAGzE,GADkB,IAAIoC,IAAIC,WAAwB3C,OAAOC,UAC3C2C,SAAW5C,OAAOC,SAAS2C,OAIvC,OAGF5C,OAAO6C,iBAAiB,OAAQ,WAC9B,IAAMxC,EAAK,GAAA3C,OAAMiF,WAAN,sBAEP7C,GAiDV,SAAiCO,GAE/ByC,MAAMzC,GACHI,KAAK,SAAAsC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C7C,UAAUC,cAAc6C,MAAM3C,KAAK,SAAAC,GACjCA,EAAa2C,aAAa5C,KAAK,WAC7BT,OAAOC,SAASqD,aAKpBlD,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAsC,CAAwBlD,GAIxBC,UAAUC,cAAc6C,MAAM3C,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MK5BxBmD","file":"static/js/main.fb3bb5b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-input.css';\r\n\r\nconst ToDoInput = ({ value, onChange,onKeyPress }) => (\r\n  <div className=\"todo-input-wrapper\">\r\n    <i className=\"fas fa-plus\" />\r\n    <input\r\n      className=\"todo-input\"\r\n      placeholder=\"Click to add task\"\r\n      onChange={onChange}\r\n      value={value}\r\n      onKeyPress={onKeyPress}\r\n    />\r\n  </div>\r\n  \r\n);\r\n\r\nToDoInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress:PropTypes.func,\r\n  value: PropTypes.string,\r\n}\r\n\r\nToDoInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress:()=>{},\r\n  value: '',\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './todo-item.css';\r\nconst ToDoItem = ({ text, isCompleted,removeTask,id,completeTask }) => (\r\n  <li className=\"todo-item\">\r\n    <i onClick={()=>completeTask(id)} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n    <i onClick={()=>removeTask(id)} className=\"fas fa-times\" />\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  id:PropTypes.number,\r\n}\r\n\r\nToDoItem.defaultProps = {\r\n  text: '',\r\n  isCompleted: false,\r\n  id:0\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ToDoItem from '../todo-item/todo-item';\r\n\r\nimport './todo-list.css';\r\nconst ToDoList = ({ tasksList,removeTask,completeTask}) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted }) => (\r\n      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask:PropTypes.func,\r\n  completeTask:PropTypes.func,\r\n}\r\n\r\nToDoList.defaultProps = {\r\n  tasksList: [],\r\n  removeTask:()=>{},\r\n  completeTask:()=>{},\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './footer.css';\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: 'All',\r\n    id: 'all',\r\n  },\r\n  {\r\n    text: 'Active',\r\n    id: 'active',\r\n  },\r\n  {\r\n    text: 'Completed',\r\n    id: 'completed'\r\n  }\r\n];\r\n\r\nconst Footer = ({ amount, activeFilter, changeFilter }) => (\r\n  <div className=\"footer\">\r\n    <span className=\"amount\">{`${amount} Tasks left`}</span>\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          onClick={() => { changeFilter(id) }}\r\n          key={id}\r\n          className={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}>\r\n          {text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFooter.propTypes = {\r\n  amount: PropTypes.number,\r\n  activeFilter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  changeFilter: () => { },\r\n  amount: 0,\r\n  activeFilter: 'all',\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../actions/actionCreator'\r\n\r\nimport ToDoInput from '../components/todo-input/todo-input';\r\nimport ToDoList from '../components/todo-list/todo-list';\r\nimport Footer from '../components/footer/footer';\r\n\r\nimport './todo.css';\r\n\r\n\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    taskText: '',\r\n  }\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      taskText: value,\r\n    })\r\n  }\r\n  \r\n  addTask = ({ key }) => {\r\n    const { taskText } = this.state;\r\n    if (taskText.length > 1 && key === 'Enter') {\r\n      const { addTask } = this.props;\r\n      addTask((new Date()).getTime(), taskText, false);\r\n      this.setState({\r\n        taskText: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case 'completed':\r\n        return tasks.filter(task => task.isCompleted);\r\n      case 'active':\r\n        return tasks.filter(task => !task.isCompleted);\r\n      default:\r\n        return tasks;\r\n    }\r\n  }\r\n\r\n  getActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length\r\n\r\n  render() {\r\n    const { taskText } = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n    const filterTasks = this.filterTasks(tasks, filters);\r\n    const taskCounter = this.getActiveTasksCounter(tasks);\r\n\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <ToDoInput onKeyPress={this.addTask} onChange={this.handleInputChange} value={taskText} />\r\n        {isTasksExist && <ToDoList tasksList={filterTasks} removeTask={removeTask} completeTask={completeTask} />}\r\n        {isTasksExist && <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({ tasks, filters }) => ({\r\n  tasks,\r\n  filters,\r\n}), { addTask, removeTask, completeTask, changeFilter })(ToDo); ","import {ADD_TASK,REMOVE_TASK,COMPLETE_TASK,CHANGE_FILTER} from '../constants';\r\n\r\nexport const  addTask=(id,text,isCompleted)=>({\r\n    type:ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted\r\n});\r\n\r\nexport const removeTask=id=>({\r\n    type:REMOVE_TASK,\r\n    id\r\n});\r\nexport const completeTask=id=>({\r\n    type:COMPLETE_TASK,\r\n    id\r\n});\r\n\r\nexport const changeFilter=activeFilter=>({\r\n    type:CHANGE_FILTER,\r\n    activeFilter,\r\n})","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK='REMOVE_TASK';\r\nexport const COMPLETE_TASK='COMPLETE_TASK';\r\nexport const CHANGE_FILTER='CHANGE_FILTER';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({ title }) => (\r\n  <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nTitle.defaultProps = {\r\n  title: 'Simple title',\r\n}\r\n\r\nexport default Title;\r\n","import React,{Fragment} from 'react';\r\n\r\nimport ToDo from './container/todo';\r\nimport Title from './components/title/title'\r\n\r\n\r\nconst App=()=>(\r\n    <Fragment>\r\n        <Title title='ToDo App'/>\r\n        <ToDo/>\r\n    </Fragment>\r\n)\r\n\r\nexport default App; ","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from '../constants';\r\nimport {load} from 'redux-localstorage-simple';\r\n\r\nlet TASKS=load({namespace:'todo-list'});\r\n\r\nif(!TASKS||!TASKS.tasks||!TASKS.tasks.length){\r\n  TASKS={\r\n    tasks:[],\r\n  }\r\n}\r\n\r\nconst tasks = (state = TASKS.tasks, { id, text, isCompleted, type }) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state, {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n        }\r\n      ];\r\n    case REMOVE_TASK:\r\n      return [...state].filter(task => task.id !== id);\r\n    case COMPLETE_TASK:\r\n      return [...state].map(task => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tasks;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple'\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n        typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n    createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(\r\n            applyMiddleware(save({ namespace: 'todo-list' }))\r\n        ),\r\n    )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { CHANGE_FILTER } from '../constants';\r\n\r\nconst BASE_FILTER = 'all';\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n    switch (type) {\r\n        case CHANGE_FILTER:\r\n            return activeFilter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default filter;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport filters from './filters';\r\n\r\nconst rootReducer = combineReducers({tasks,filters});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from './components/App';\r\nimport registerServiceWorker from './components/registerServiceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './components/store'\r\n///MDB\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n///MDB\r\n\r\n\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n), document.getElementById('root'))\r\nregisterServiceWorker();    \r\n"],"sourceRoot":""}